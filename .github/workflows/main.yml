name: Build Armbian

on:
  release:
    types: published
  push:
    branches:
      - master
#  schedule:
#    - cron: 0 8 * * 5
#  watch:
#    types: started

env:
  REPO_URL: https://github.com/armbian/build
  REPO_BRANCH: v2017.11
  BOARD: orangepilite
  BRANCH: default
  RELEASE: jessie
  BUILD_MINIMAL: yes
  BUILD_DESKTOP: no
  KERNEL_ONLY: no
  KERNEL_CONFIGURE: no
  UPLOAD_DIR: true

jobs:
  build:
    runs-on: ubuntu-16.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff /swapfile
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install git -y
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
    - name: Clone source code
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH armbian

    - name: Compile Firmware
      id: compile
      run: |
        cd armbian
        ././compile.sh BOARD=$BOARD BRANCH=$BRANCH RELEASE=$RELEASE BUILD_MINIMAL=$BUILD_MINIMAL BUILD_DESKTOP=$BUILD_DESKTOP KERNEL_ONLY=$KERNEL_ONLY KERNEL_CONFIGURE=$KERNEL_CONFIGURE
        echo "::set-output name=status::success"
    - name: Upload bin directory
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_DIR == 'true'
      with:
        name: Armbian_firmware
        path: armbian/
