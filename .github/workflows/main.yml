name: Build Armbian

on:
  release:
    types: published
  push:
    branches:
      - master
#  schedule:
#    - cron: 0 8 * * 5
#  watch:
#    types: started

env:
  RELEASE_SOURCE_TAG: s5p6818-purge
  BOARD: orangepilite
  RELEASE: jessie
  BUILD_MINIMAL: yes
  BUILD_DESKTOP: no
  KERNEL_ONLY: no
  KERNEL_CONFIGURE: no
  UPLOAD_DIR: true

jobs:
  build:
    runs-on: ubuntu-16.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff /swapfile
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

    - name: Download source code
      run: |
        curl -L -o armbian.tar.gz $(curl https://api.github.com/repos/armbian/build/releases | awk -F"[tarball_url]" '/tarball_url/{print $x}' | grep $RELEASE_SOURCE_TAG | sed 's/"//g' | sed 's/tarball_url://g' | sed 's/ //g' | sed 's/,//g')
        tar -xzf armbian.tar.gz
        rm -rf armbian.tar.gz

    - name: Compile firmware
      id: compile
      run: |
        cd armbian-build*
        sudo ./compile.sh BOARD=$BOARD RELEASE=$RELEASE BUILD_MINIMAL=$BUILD_MINIMAL BUILD_DESKTOP=$BUILD_DESKTOP KERNEL_ONLY=$KERNEL_ONLY KERNEL_CONFIGURE=$KERNEL_CONFIGURE
        mkdir img
        mv *.img img/
        echo "::set-output name=status::success"

    - name: Upload Armbian directory
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_DIR == 'true'
      with:
        name: Armbian_firmware
        path: armbian/img/
