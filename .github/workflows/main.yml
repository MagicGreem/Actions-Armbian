name: Build Armbian

on:
  release:
    types: published
  push:
    branches:
      - master
#  schedule:
#    - cron: 0 8 * * 5
#  watch:
#    types: started

env:
  RELEASE_SOURCE_TAG: sunxi-4.20
  BUILD_MINIMAL: yes
  KERNEL_ONLY: no
  KERNEL_CONFIGURE: no
  BOARD: orangepilite
  BRANCH: next
  RELEASE: jessie
  BUILD_DESKTOP: no

jobs:
  build:
    runs-on: ubuntu-16.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff /swapfile
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E dpkg --add-architecture i386
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install -y git dialog lsb-release binutils wget ca-certificates device-tree-compiler pv bc lzop zip binfmt-support build-essential ccache debootstrap ntpdate gawk gcc-arm-linux-gnueabihf qemu-user-static u-boot-tools uuid-dev zlib1g-dev unzip libusb-1.0-0-dev parted pkg-config libncurses5-dev whiptail debian-keyring debian-archive-keyring f2fs-tools libfile-fcntllock-perl rsync libssl-dev nfs-kernel-server btrfs-tools ncurses-term p7zip-full kmod dosfstools libc6-dev-armhf-cross fakeroot xxd curl patchutils python liblz4-tool libpython2.7-dev linux-base swig libpython-dev systemd-container udev g++-5-arm-linux-gnueabihf lib32stdc++6 cpio tzdata psmisc acl libc6-i386 lib32ncurses5 lib32tinfo5 locales ncurses-base zlib1g:i386 pixz bison libbison-dev flex libfl-dev pigz aptly aria2 cryptsetup cryptsetup-bin --no-install-recommends
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo -E locale-gen en_US.UTF-8

    - name: Download source code
      run: |
        curl -L -o armbian.tar.gz $(curl https://api.github.com/repos/armbian/build/releases | awk -F"[tarball_url]" '/tarball_url/{print $x}' | grep $RELEASE_SOURCE_TAG | sed 's/"//g' | sed 's/tarball_url://g' | sed 's/ //g' | sed 's/,//g')
        tar -xzf armbian.tar.gz
        rm -rf armbian.tar.gz

    - name: Build Armbian
      id: build
      env: 
        LANG: en_US.UTF-8
        LANGUAGE: en_US:en
        LC_ALL: en_US.UTF-8
      run: |
        cd armbian-build*
        sudo -E ./compile.sh BUILD_MINIMAL=$BUILD_MINIMAL KERNEL_ONLY=$KERNEL_ONLY KERNEL_CONFIGURE=$KERNEL_CONFIGURE BOARD=$BOARD BRANCH=$BRANCH RELEASE=$RELEASE BUILD_DESKTOP=$BUILD_DESKTOP FORCE_USE_RAMDISK=yes USE_CCACHE=yes
        echo "::set-output name=status::success"
        tar -cjvf /tmp/Armbian.tar.bz2 output/images/*.img

    - name: Upload Armbian image
      uses: actions/upload-artifact@master
      if: steps.build.outputs.status == 'success'
      with:
        name: Armbian_firmware
        path: /tmp/Armbian.tar.bz2
